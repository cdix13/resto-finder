{"version":3,"sources":["components/Autocomplete/index.module.css","components/Dropdown/index.module.css","axios.ts","components/Autocomplete/index.tsx","components/RestoCard/index.tsx","components/Dropdown/index.tsx","components/FilterRating/index.tsx","components/RestoDetail/index.tsx","App.tsx","serviceWorker.ts","index.tsx","components/RestoDetail/index.module.css","components/RestoCard/index.module.css","components/FilterRating/index.module.css"],"names":["module","exports","_axios","defaults","baseURL","headers","common","Autocomplete","props","useState","activeSuggestion","setActiveSuggestion","showSuggestions","setShowSuggestions","userInput","setUserInput","className","classes","wrapper","placeholder","input","type","onChange","e","q","target","value","onKeyDown","keyCode","city","suggestions","onSelect","id","name","length","map","suggestion","index","suggestionActive","key","onClick","cityId","currentTarget","innerText","_onClick","noSuggestions","defaultProps","RestoCard","image","src","resto","thumb","alt","info","title","size","path","mdiLocationEnter","location","locality","mdiStarCircle","establishment","body","cuisines","footer","mdiCommentOutline","all_reviews_count","mdiStar","user_rating","aggregate_rating","Dropdown","showList","setShowList","dropdown","dropbtn","selected","dropdownContent","lists","list","style","cursor","FilterRating","star2","star3","star4","rating","ratings","includes","filter","r","s","mdiStarOutline","RestoDetail","seeAllPhotos","setSeeAllPhotos","reviews","setReviews","start","setStart","useEffect","_fetchReviews","a","axios","get","data","user_reviews","review","console","log","photos","slice","detail","goBack","mdiHome","gallery","p","photo","thumb_url","caption","reviewsWrapper","reviewsImage","user","profile_image","reviewsInfo","review_text","App","loading","setLoading","setError","setRatings","sort","setSort","order","setOrder","setCityId","cities","setCities","restaurants","setRestaurants","restaurant","setRestaurant","total","setTotal","_fetchRestaurants","filtered","b","nameA","toUpperCase","nameB","_fetchCities","location_suggestions","toLowerCase","results","res","f","Math","round","results_found","spin","mdiLoading","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.89cc5a08.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Autocomplete_wrapper__1mqqF\",\"input\":\"Autocomplete_input__3_7yV\",\"noSuggestions\":\"Autocomplete_noSuggestions__3mL2r\",\"suggestions\":\"Autocomplete_suggestions__2aDx-\",\"suggestionActive\":\"Autocomplete_suggestionActive__2yf_2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropbtn\":\"Dropdown_dropbtn__14HcK\",\"dropdown\":\"Dropdown_dropdown__1cucp\",\"dropdownContent\":\"Dropdown_dropdownContent__2OlY0\"};","import _axios from 'axios';\n\n_axios.defaults.baseURL = 'https://developers.zomato.com/api/v2.1/';\n_axios.defaults.headers.common['Content-Type'] = 'application/json';\n_axios.defaults.headers.common['user-key'] = '4d489d98c2e6ca99aafae7e1029fb52f';\n// _axios.defaults.headers.common['user-key'] = '0f47aef88503cc4d36643be57cff421e';\n\nexport default _axios;\n","import React, { useState } from 'react';\nimport classes from './index.module.css';\n\ninterface Props {\n  suggestions: any[];\n  onChange(q: string): any;\n  onSelect(q: string): any;\n}\n\nconst Autocomplete = (props: Props) => {\n  const [activeSuggestion, setActiveSuggestion] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [userInput, setUserInput] = useState('');\n\n  const _onChange = (e: any) => {\n    const q = e.target.value;\n    if (q) {\n      setShowSuggestions(true);\n    } else {\n      setShowSuggestions(false);\n    }\n    setUserInput(q);\n    props.onChange(q);\n  };\n\n  const _onKeyDown = (e: React.KeyboardEvent) => {\n    // User pressed the enter key\n    if (e.keyCode === 13) {\n      const city = props.suggestions[activeSuggestion];\n      if (city) {\n        props.onSelect(city.id);\n        setUserInput(city.name);\n        setActiveSuggestion(0);\n        setShowSuggestions(false);\n      }\n    }\n    // User pressed the up arrow\n    else if (e.keyCode === 38) {\n      if (activeSuggestion === 0) {\n        return;\n      }\n\n      setActiveSuggestion(activeSuggestion - 1);\n    }\n    // User pressed the down arrow\n    else if (e.keyCode === 40) {\n      if (activeSuggestion - 1 === props.suggestions.length) {\n        return;\n      }\n\n      setActiveSuggestion(activeSuggestion + 1);\n    }\n  };\n\n  const _onClick = (e: any, cityId: string) => {\n    props.onSelect(cityId);\n    setUserInput(e.currentTarget.innerText);\n    setShowSuggestions(false);\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <input\n        placeholder=\"Search city here...\"\n        className={classes.input}\n        type=\"text\"\n        onChange={_onChange}\n        onKeyDown={_onKeyDown}\n        value={userInput}\n      />\n      {showSuggestions &&\n        (props.suggestions.length > 0 ? (\n          <ul className={classes.suggestions}>\n            {props.suggestions.map((suggestion, index) => {\n              let className;\n\n              if (index === activeSuggestion) {\n                className = classes.suggestionActive;\n              }\n\n              return (\n                <li\n                  className={className}\n                  key={suggestion.id}\n                  onClick={(e) => _onClick(e, suggestion.id)}\n                >\n                  {suggestion.name}\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <div className={classes.noSuggestions}>\n            <em>No suggestions, you're on your own!</em>\n          </div>\n        ))}\n    </div>\n  );\n};\n\nAutocomplete.defaultProps = {\n  suggestions: [],\n};\n\nexport default Autocomplete;\n","import React from 'react';\nimport Icon from '@mdi/react';\nimport {\n  mdiStarCircle,\n  mdiLocationEnter,\n  mdiCommentOutline,\n  mdiStar,\n} from '@mdi/js';\nimport classes from './index.module.css';\nimport { RestoProps } from '../types';\n\ninterface Props {\n  resto: RestoProps;\n  onClick(): any;\n}\nconst RestoCard = (props: Props) => {\n  return (\n    <div onClick={props.onClick} className={classes.wrapper}>\n      <img\n        className={classes.image}\n        src={props.resto.thumb}\n        alt={props.resto.name}\n      />\n      <div className={classes.info}>\n        <div className={classes.title}>\n          <h3>{props.resto.name}</h3>\n          <p>\n            <Icon size={0.7} path={mdiLocationEnter} />{' '}\n            {props.resto.location.locality}{' '}\n            <Icon size={0.7} path={mdiStarCircle} />{' '}\n            {props.resto.establishment[0]}\n          </p>\n        </div>\n        <p className={classes.body}>{props.resto.cuisines}</p>\n        <div className={classes.footer}>\n          <p>\n            <Icon size={0.7} path={mdiCommentOutline} />{' '}\n            {props.resto.all_reviews_count} Reviews\n          </p>\n          <p>\n            <Icon size={0.7} path={mdiStar} />{' '}\n            {props.resto.user_rating.aggregate_rating}/5\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RestoCard;\n","import React, { useState } from 'react';\nimport classes from './index.module.css';\n\ninterface Props {\n  lists: string[];\n  onChange(list: string): any;\n  selected: string;\n}\n\nconst Dropdown = (props: Props) => {\n  const [showList, setShowList] = useState(false);\n  return (\n    <div className={classes.dropdown}>\n      <button\n        onClick={() => setShowList(!showList)}\n        className={classes.dropbtn}\n      >\n        {props.selected || 'Dropdown'}\n      </button>\n      {showList && (\n        <div className={classes.dropdownContent}>\n          {props.lists.map((list) => (\n            <span\n              key={list}\n              style={{\n                cursor: props.selected === list ? 'default' : 'pointer',\n              }}\n              onClick={() => {\n                if (props.selected === list) {\n                  return;\n                }\n                setShowList(false);\n                props.onChange(list);\n              }}\n            >\n              {list}\n            </span>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dropdown;\n","import React from 'react';\nimport Icon from '@mdi/react';\nimport { mdiStar, mdiStarOutline } from '@mdi/js';\nimport classes from './index.module.css';\n\ninterface Props {\n  ratings: any[];\n  onChange(ratings: any[]): any;\n}\n\nconst FilterRating = (props: Props) => {\n  const star2 = [1, 2];\n  const star3 = [1, 2, 3];\n  const star4 = [1, 2, 3, 4];\n  const star5 = [1, 2, 3, 4, 5];\n  return (\n    <div className={classes.rating}>\n      <p>Filter Rating:</p>\n      <span\n        className={props.ratings.includes(1) ? classes.selected : ''}\n        onClick={() => {\n          if (props.ratings.includes(1)) {\n            props.onChange(props.ratings.filter((r) => r !== 1));\n          } else {\n            props.onChange([...props.ratings, 1]);\n          }\n        }}\n      >\n        <Icon size={1} path={mdiStar} />\n        {star4.map((s) => (\n          <Icon key={s} size={1} path={mdiStarOutline} />\n        ))}\n      </span>\n      <span\n        className={props.ratings.includes(2) ? classes.selected : ''}\n        onClick={() => {\n          if (props.ratings.includes(2)) {\n            props.onChange(props.ratings.filter((r) => r !== 2));\n          } else {\n            props.onChange([...props.ratings, 2]);\n          }\n        }}\n      >\n        {star2.map((s) => (\n          <Icon key={s} size={1} path={mdiStar} />\n        ))}\n        {star3.map((s) => (\n          <Icon key={s} size={1} path={mdiStarOutline} />\n        ))}\n      </span>\n      <span\n        className={props.ratings.includes(3) ? classes.selected : ''}\n        onClick={() => {\n          if (props.ratings.includes(3)) {\n            props.onChange(props.ratings.filter((r) => r !== 3));\n          } else {\n            props.onChange([...props.ratings, 3]);\n          }\n        }}\n      >\n        {star3.map((s) => (\n          <Icon key={s} size={1} path={mdiStar} />\n        ))}\n        {star2.map((s) => (\n          <Icon key={s} size={1} path={mdiStarOutline} />\n        ))}\n      </span>\n      <span\n        className={props.ratings.includes(4) ? classes.selected : ''}\n        onClick={() => {\n          if (props.ratings.includes(4)) {\n            props.onChange(props.ratings.filter((r) => r !== 4));\n          } else {\n            props.onChange([...props.ratings, 4]);\n          }\n        }}\n      >\n        {star4.map((s) => (\n          <Icon key={s} size={1} path={mdiStar} />\n        ))}\n        <Icon size={1} path={mdiStarOutline} />\n      </span>\n      <span\n        className={props.ratings.includes(5) ? classes.selected : ''}\n        onClick={() => {\n          if (props.ratings.includes(5)) {\n            props.onChange(props.ratings.filter((r) => r !== 5));\n          } else {\n            props.onChange([...props.ratings, 5]);\n          }\n        }}\n      >\n        {star5.map((s) => (\n          <Icon key={s} size={1} path={mdiStar} />\n        ))}\n      </span>\n    </div>\n  );\n};\n\nexport default FilterRating;\n","import React, { useState, useEffect } from 'react';\nimport Icon from '@mdi/react';\nimport { mdiHome } from '@mdi/js';\nimport classes from './index.module.css';\nimport { RestoProps, PhotoElement } from '../types';\nimport axios from '../../axios';\n\ninterface Props {\n  resto: RestoProps;\n  goBack(): any;\n}\n\nconst RestoDetail = (props: Props) => {\n  const [seeAllPhotos, setSeeAllPhotos] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const [start, setStart] = useState(0);\n\n  useEffect(() => {\n    _fetchReviews();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [start]);\n\n  const _fetchReviews = async () => {\n    try {\n      const { data } = await axios.get(\n        `/reviews?res_id=${props.resto.id}&start=${start}&count=3`,\n      );\n      setReviews(\n        start === 0\n          ? data.user_reviews.map((r: any) => r.review)\n          : [...reviews, ...data.user_reviews.map((r: any) => r.review)],\n      );\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const photos = seeAllPhotos\n    ? props.resto.photos\n    : props.resto.photos.slice(0, 3);\n\n  return (\n    <div className={classes.detail}>\n      <div className={classes.title}>\n        <p style={{ cursor: 'pointer' }} onClick={props.goBack}>\n          <Icon size={1} path={mdiHome} /> Back to home\n        </p>\n        <h2>{props.resto.name}</h2>\n      </div>\n      <div className={classes.gallery}>\n        {photos.map((p: PhotoElement) => (\n          <img key={p.photo.id} src={p.photo.thumb_url} alt={p.photo.caption} />\n        ))}\n      </div>\n      {photos.length < props.resto.photos.length && (\n        <button\n          className=\"my-2 bg-btn-red\"\n          onClick={() => setSeeAllPhotos(true)}\n        >\n          See all photo\n        </button>\n      )}\n      <div className={classes.reviews}>\n        {reviews.map((r: any) => (\n          <div key={r.id} className={classes.reviewsWrapper}>\n            <img\n              className={classes.reviewsImage}\n              src={r.user.profile_image}\n              alt={r.user.name}\n            />\n            <div className={classes.reviewsInfo}>\n              <h3>{r.user.name}</h3>\n              <p>{r.review_text}</p>\n            </div>\n          </div>\n        ))}\n      </div>\n      {reviews.length > 0 && (\n        <button className=\"my-2 bg-btn-red\" onClick={() => setStart(start + 3)}>\n          Show more review\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default RestoDetail;\n","import React, { useState, useEffect } from 'react';\nimport Icon from '@mdi/react';\nimport { mdiLoading } from '@mdi/js';\n\nimport './App.css';\nimport axios from './axios';\nimport Autocomplete from './components/Autocomplete';\nimport RestoCard from './components/RestoCard';\nimport Dropdown from './components/Dropdown';\nimport FilterRating from './components/FilterRating';\nimport RestoDetail from './components/RestoDetail';\n\nfunction App() {\n  const [start, setStart] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const [ratings, setRatings] = useState<number[]>([]);\n  const [sort, setSort] = useState('Rating');\n  const [order, setOrder] = useState('asc');\n  const [cityId, setCityId] = useState('');\n  const [cities, setCities] = useState([]);\n  const [restaurants, setRestaurants] = useState<any[]>([]);\n  const [restaurant, setRestaurant] = useState();\n  const [total, setTotal] = useState(0);\n  const count = 12;\n\n  useEffect(() => {\n    if (cityId) {\n      if (sort === 'Rating') {\n        _fetchRestaurants();\n      } else {\n        let filtered = [...restaurants];\n        if (sort === 'Name') {\n          filtered = filtered.sort((a, b) => {\n            let nameA = a.name.toUpperCase(); // ignore upper and lowercase\n            let nameB = b.name.toUpperCase(); // ignore upper and lowercase\n            if (order === 'desc') {\n              nameA = b.name.toUpperCase(); // ignore upper and lowercase\n              nameB = a.name.toUpperCase(); // ignore upper and lowercase\n            }\n            if (nameA < nameB) {\n              return -1;\n            }\n            if (nameA > nameB) {\n              return 1;\n            }\n\n            // names must be equal\n            return 0;\n          });\n        }\n        if (sort === 'Review') {\n          filtered = filtered.sort((a, b) => {\n            if (order === 'asc') {\n              return a.all_reviews_count - b.all_reviews_count;\n            }\n            return b.all_reviews_count - a.all_reviews_count;\n          });\n        }\n\n        setRestaurants(filtered);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cityId, start, order, sort, ratings]);\n\n  const _fetchCities = async (q: string) => {\n    if (q) {\n      try {\n        const { data } = await axios.get(`/cities?q=${q}&count=20`);\n        setCities(data.location_suggestions);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  };\n\n  const _fetchRestaurants = async () => {\n    setCities([]);\n    setLoading(true);\n    try {\n      const { data } = await axios.get(\n        `/search?entity_id=${cityId}&entity_type=city&start=${start}&count=${count}&sort=${sort.toLowerCase()}&order=${order}`,\n      );\n      let results =\n        start === 0\n          ? data.restaurants.map((res: any) => res.restaurant)\n          : [\n              ...restaurants,\n              ...data.restaurants.map((res: any) => res.restaurant),\n            ];\n\n      if (ratings.length > 0) {\n        results = results.filter((f: any) =>\n          ratings.includes(Math.round(f.user_rating.aggregate_rating)),\n        );\n      }\n\n      setLoading(false);\n      setRestaurants(results);\n      setTotal(data.results_found);\n    } catch (e) {\n      setError(e);\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <header>\n        <h1>Restaurant Finder</h1>\n      </header>\n      {restaurant ? (\n        <RestoDetail resto={restaurant} goBack={() => setRestaurant('')} />\n      ) : (\n        <>\n          <main>\n            <div className=\"sidebar\">\n              <Autocomplete\n                suggestions={cities}\n                onChange={(q) => _fetchCities(q)}\n                onSelect={(cityId) => setCityId(cityId)}\n              />\n              {restaurants.length > 0 && (\n                <>\n                  <FilterRating\n                    ratings={ratings}\n                    onChange={(ratings) => setRatings(ratings)}\n                  />\n                  <div className=\"filter\">\n                    <p>Sort:</p>\n                    <Dropdown\n                      selected={sort}\n                      lists={['Rating', 'Review', 'Name']}\n                      onChange={(sort) => setSort(sort)}\n                    />\n                  </div>\n                  <div className=\"filter\">\n                    <p>Order:</p>\n                    <button\n                      onClick={() => {\n                        setStart(0);\n                        setOrder('asc');\n                      }}\n                      className={order === 'asc' ? 'sort-active' : ''}\n                    >\n                      ASC\n                    </button>\n                    <button\n                      onClick={() => {\n                        setStart(0);\n                        setOrder('desc');\n                      }}\n                      className={order === 'desc' ? 'sort-active' : ''}\n                    >\n                      DESC\n                    </button>\n                  </div>\n                  <div className=\"info\">\n                    <p>Total Resto: {total} </p>\n                    <p>Total Shown: {restaurants.length}</p>\n                  </div>\n                </>\n              )}\n            </div>\n            <div className=\"content\">\n              {restaurants.map((res: any) => (\n                <RestoCard\n                  key={res.id}\n                  resto={res}\n                  onClick={() => setRestaurant(res)}\n                />\n              ))}\n            </div>\n          </main>\n          <div className=\"action\">\n            {restaurants.length === 0 ? (\n              <p>Please enter city first</p>\n            ) : loading ? (\n              <Icon spin size={3} path={mdiLoading} />\n            ) : (\n              <button\n                className=\"bg-btn-red\"\n                onClick={() => setStart(start + count)}\n              >\n                Load More\n              </button>\n            )}\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './styles/index.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"detail\":\"RestoDetail_detail__35Z6t\",\"gallery\":\"RestoDetail_gallery__j1A3C\",\"reviews\":\"RestoDetail_reviews__2C3fB\",\"reviewsWrapper\":\"RestoDetail_reviewsWrapper__wbEAT\",\"reviewsImage\":\"RestoDetail_reviewsImage__2DkwI\",\"reviewsInfo\":\"RestoDetail_reviewsInfo__1N8n8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RestoCard_wrapper__2kpdS\",\"image\":\"RestoCard_image__1jivA\",\"info\":\"RestoCard_info__LK3CN\",\"title\":\"RestoCard_title__3YvG8\",\"body\":\"RestoCard_body__1cAq4\",\"footer\":\"RestoCard_footer__3dmCN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating\":\"FilterRating_rating__3c32w\",\"selected\":\"FilterRating_selected__1xgCG\"};"],"sourceRoot":""}